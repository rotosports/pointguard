name: docker-build-test

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: "ubuntu-latest"
    permissions:
      contents: write 
      packages: write 
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/Dockerfile

  test:
    if: github.event.pull_request.head.repo.full_name == github.repository
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
    - name: Clone ephemeral-cluster repo
      uses: actions/checkout@v2
      with:
        repository: celestiaorg/ephemeral-cluster
        path: ephemeral-cluster
        ref: jbowen93/mess
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: "Setup Cluster"
      run: |
        export ETHERMINT_IMAGE_TAG=sha-$(git rev-parse --short "$GITHUB_SHA")
        echo $ETHERMINT_IMAGE_TAG
        cd ephemeral-cluster
        scripts/minimal-ethermint.sh
    - name: "Test Cluster"
      run: | 
        docker ps -a
        echo "------------- docker logs core0 -------------"
        docker logs core0
        echo "------------- docker logs dalc0 -------------"
        docker logs dalc0
        echo "------------- docker logs ethermint0 -------------"
        docker logs ethermint0
        cd /home/runner/work/ethermint/ethermint
        echo "------------- go test ./tests/rpc/... -------------"
        MODE=rpc HOST=http://127.0.0.1:8545 go test ./tests/rpc/... -v